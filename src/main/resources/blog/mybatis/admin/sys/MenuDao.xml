<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.2//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chenchuan.admin.sys.dao.MenuDao">
    <sql id="menuObject">
		m.menu_id       AS menuId,
		m.menu_name     AS menuName,
		m.p_menu_id     AS pMenuId,
		m.menu_des      AS menuDes,
		m.sort_no       AS sortNo,
		m.`status`      AS `status`,
		m.create_user   AS createUser,
		m.create_time   AS createTime,
		m.modify_user   AS modifyUser,
		m.modify_time   AS modifyTime
	</sql>

    <!-- 根据用户查询菜单树 -->
    <select id="findMenuTreebyUser" parameterType="com.chenchuan.admin.sys.vo.UserVo"
            resultType="com.chenchuan.admin.sys.vo.MenuVo">
        SELECT
        m.menu_id AS menuId,
        m.menu_id AS id,
        m.menu_name AS menuName,
        m.menu_name AS text,
        m.p_menu_id AS pMenuId,
        p.url AS url,
        IFNULL( children.childrenNumber, 0 ) AS childrenNumber
        FROM menu AS m
        LEFT JOIN (
        SELECT
        m1.p_menu_id AS pMenuId,
        COUNT(DISTINCT rma1.menu_id) AS childrenNumber
        FROM `user` AS u1
        LEFT JOIN user_role_auth AS ura1
        ON u1.user_id = ura1.user_id
        LEFT JOIN role AS r1
        ON r1.role_id = ura1.role_id
        LEFT JOIN role_menu_auth AS rma1
        ON rma1.role_id = r1.role_id
        LEFT JOIN menu AS m1
        ON rma1.menu_id = m1.menu_id AND m1.`status` = 1
        <where>
            <if test="loginName != null and loginName != ''">
                u1.login_name = #{loginName}
            </if>
        </where>
        GROUP BY m1.p_menu_id
        ) AS children
        ON m.menu_id = children.pMenuId AND m.`status` = 1
        LEFT JOIN permission AS p
        ON m.menu_id = p.menu_id AND p.url_type ='bm'
        WHERE m.menu_id IN
        (SELECT
        DISTINCT rma.menu_id
        FROM `user` AS u
        LEFT JOIN user_role_auth AS ura
        ON u.user_id = ura.user_id
        LEFT JOIN role AS r
        ON r.role_id = ura.role_id
        LEFT JOIN role_menu_auth AS rma
        ON rma.role_id = r.role_id
        <where>
            <if test="loginName != null and loginName != ''">
                u.login_name = #{loginName}
            </if>
        </where>
        )
        ORDER BY m.sort_no
    </select>

    <!-- 查询所有菜单树 -->
    <select id="findAllMenuTree" resultType="com.chenchuan.admin.sys.vo.MenuVo">
        SELECT
        <include refid="menuObject"/>,
        m.menu_id AS id,
        m.menu_name AS text,
        IFNULL(children.childrenNumber,0) AS childrenNumber
        FROM menu m
        LEFT JOIN (
        SELECT COUNT(m1.p_menu_id) AS childrenNumber,m1.p_menu_id AS pMenuId FROM menu m1 GROUP BY m1.p_menu_id
        ) children
        ON m.menu_id = children.pMenuId
        ORDER BY m.sort_no
    </select>

    <!-- 添加菜单 -->
    <insert id="addMenu" parameterType="com.chenchuan.admin.sys.vo.MenuVo">
        INSERT INTO menu(
          menu_id,
          menu_name,
          p_menu_id,
          menu_des,
          sort_no,
          status,
          create_user,
          create_time,
          modify_user,
          modify_time
        )VALUES (
          #{menuId},
          #{menuName},
          #{pMenuId},
          #{menuDes},
          #{sortNo},
          #{status},
          #{createUser},
          NOW(),
          #{modifyUser},
          NOW()
        )
    </insert>

    <!-- 根据菜单编号查询菜单详情 -->
    <select id="findMenuByMenuId" parameterType="String" resultType="com.chenchuan.admin.sys.po.MenuPo">
        SELECT
        <include refid="menuObject"/>
        FROM menu m
        WHERE m.menu_id = #{menuId}
    </select>

    <!-- 根据菜单编号修改菜单 -->
    <update id="editMenuByMenuId" parameterType="com.chenchuan.admin.sys.vo.MenuVo">
        UPDATE menu
        <set>
            <if test="menuName != null and menuName != ''">menu_name = #{menuName},</if>
            <if test="pMenuId != null and pMenuId != ''">p_menu_id = #{pMenuId},</if>
            <if test="menuDes != null and menuDes != ''">menu_des = #{menuDes},</if>
            <if test="sortNo != null and sortNo != ''">sort_no = #{sortNo},</if>
            <if test="status == 0 or (status != null and status != '')">status = #{status},</if>
            <if test="modifyUser != null and modifyUser != ''">modify_user = #{modifyUser},</if>
            modify_time = NOW()
        </set>
        WHERE menu_id = #{menuId}
    </update>

    <!-- 查看当前菜单子菜单数量 -->
    <select id="findChildrenMenuByMenuId" parameterType="String" resultType="Integer">
        SELECT COUNT(*) FROM menu m LEFT JOIN menu m1 ON m.p_menu_id = m1.menu_id
        WHERE m1.menu_id = #{menuId}
    </select>

    <!-- 根据菜单编号删除菜单 -->
    <delete id="removeMenuByMenuId" parameterType="String">
        DELETE FROM menu WHERE menu_id = #{menuId}
    </delete>

    <!-- 根据菜单编号删除角色菜单关联 -->
    <delete id="removeRoleMenuAuthByMenuId" parameterType="String">
        DELETE FROM role_menu_auth WHERE menu_id = #{menuId}
    </delete>


    <!-- 根据角色编号展示与菜单权限的关系（菜单树形的数据） -->
    <resultMap id="findResultMapOfRoleMenuPermissionAuthTree" type="com.chenchuan.admin.sys.vo.MenuVo">
        <id property="menuId" column="menuId"/>
        <result property="id" column="id"/>
        <result property="menuName" column="menuName"/>
        <result property="text" column="text"/>
        <result property="pMenuId" column="pMenuId"/>
        <result property="childrenNumber" column="childrenNumber"/>
        <result property="menuChecked" column="menuChecked"/>
        <collection property="permissionList" ofType="com.chenchuan.admin.sys.vo.PermissionVo">
            <id property="permissionId" column="permissionId"/>
            <result property="permissionName" column="permissionName"/>
            <result property="permissionChecked" column="permissionChecked"/>
        </collection>
    </resultMap>
    <select id="findRoleMenuPermissionAuthTree" parameterType="String"
            resultMap="findResultMapOfRoleMenuPermissionAuthTree">
        SELECT
            m.menu_id       AS menuId,
            m.menu_id       AS id,
            m.menu_name     AS menuName,
            m.menu_name     AS text,
            m.p_menu_id     AS pMenuId,
            IFNULL(menuChildren.childrenNumber,0)	AS childrenNumber,
            (CASE WHEN rma1.role_id is NULL THEN NULL ELSE	1 END) AS menuChecked,
            p.permission_id		AS permissionId,
            p.permission_name	AS permissionName,
            (CASE WHEN rpa.permission_id is NULL THEN NULL ELSE	1 END) AS permissionChecked
        FROM menu m
        LEFT JOIN (
            SELECT
            COUNT(menu_id) AS childrenNumber,
            p_menu_id
            FROM menu
            GROUP BY p_menu_id
        ) AS menuChildren
        ON m.menu_id = menuChildren.p_menu_id
        LEFT JOIN permission p
        ON m.menu_id = p.menu_id
        LEFT JOIN role_menu_auth rma1
        ON m.menu_id = rma1.menu_id AND rma1.role_id = #{roleId}
        LEFT JOIN role_permission_auth rpa
        ON p.permission_id = rpa.permission_id AND rpa.role_id = #{roleId}
        GROUP BY m.menu_id,m.menu_name,m.p_menu_id ,p.permission_id,p.permission_name
        ORDER BY m.sort_no,p.url_type
    </select>
</mapper>